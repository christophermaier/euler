(ns euler.problem2
  "Project Euler: Problem 2
http://projecteuler.net/index.php?section=problems&id=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which do not exceed four million.")

;;; Wish I could claim this as my own!
;;; I got it from http://squirrel.pl/blog/2010/07/26/corecursion-in-clojure/
(def fib (lazy-cat [0 1](map + fib (rest fib))))

(defn problem2 [max]
  (reduce + (filter even? (take-while #(<= % max) fib))))

